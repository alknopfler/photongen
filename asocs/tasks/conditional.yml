# Playbook create ASOCS stack.
#  
#  - It populate all DVS.
#  - Create required Port-groups on separate DVS, dedicated for all SRIOV.
#  - Take reference OVA , upload as master template.
#  - Re-create two template , each template for CU and DU.
#  - Create new network adapters and maps each to SRIOV.
#  - Serialize back all VM as templates.
#
# In case of issue mbayramo@vmware.com

# First we get all DVS.
- name: Gather all registered dvswitch
  community.vmware.vmware_dvswitch_info:
    hostname: "{{ vc_name }}"
    username: "{{ vc_user }}"
    password: "{{ vc_pass }}"
    validate_certs: False
  delegate_to: localhost
  register: dvswitch_info

# Note, if switch already presented and VM attach, 
# you can't update value on create.
- name: Create core-infra switch
  community.vmware.vmware_dvswitch:
    hostname: '{{ vc_name }}'
    username: '{{ vc_user }}'
    password: '{{ vc_pass }}'
    validate_certs: False
    datacenter: '{{ dc }}'
    switch: "{{ dvs_core_name }}"
    version: "{{ dvs_ver }}"
    # mtu: 9000
    uplink_quantity: "{{ dvs_default_uplink }}"
    # if you need lldp enable
    # discovery_protocol: lldp
    # discovery_operation: both
    state: present
  delegate_to: localhost

# Now we create separate DVS switch for sriov.
# Note it has no uplink.
- name: Create core-sriov switch
  community.vmware.vmware_dvswitch:
    hostname: '{{ vc_name }}'
    username: '{{ vc_user }}'
    password: '{{ vc_pass }}'
    validate_certs: False
    datacenter: '{{ dc }}'
    switch: "{{ dvs_sriov_name }}"
    version: "{{ dvs_ver }}"
    mtu: 9000
    uplink_quantity: "{{ dvs_default_uplink }}"
    discovery_protocol: lldp
    discovery_operation: both
    state: present
  delegate_to: localhost

# Now we create port groups
# Note we use separate task , in case we need map to different dvs.
- name: Create SRIOV portgroups required for deployment
  community.vmware.vmware_dvs_portgroup:
    hostname: "{{ vc_name }}"
    username: "{{ vc_user }}"
    password: "{{ vc_pass }}"
    validate_certs: False
    portgroup_name: "{{ item.pg_name }}"
    switch_name: "{{ item.dvs_switch_name }}"
    vlan_id: "{{ item.vid }}"
    state: present
    port_binding: static
    num_ports: 120
    network_policy:
      promiscuous: "{{ item.promiscuous | default('False') }}"
      forged_transmits: "{{ item.forged_transmits | default('False') }}"
      mac_changes: "{{ item.mac_changes | default('False') }}"
  with_items: "{{ tenant_networks }}"
  delegate_to: localhost
